##################################################
#code by acopika
#V7
#2 flare can feed 4 differgen
#
#
##################################################

_start:
	jump _work greaterThan nexttime @time
	print "\you need link a sorter to use it"
	print "\template by JohnTing"
	print "\code by acopika"
	sensor sort sorter1 @config

_copper:
	set unittype @flare
	jump _typedefine strictEqual sort @copper
_lead:
	set unittype @mono
	jump _typedefine strictEqual sort @lead
_metaglass:
	set unittype @horizon
	jump _typedefine strictEqual sort @metaglass
_graphite:
	set unittype @nova
	jump _typedefine strictEqual sort @graphite
_sand:
	set unittype @pulsar
	jump _typedefine strictEqual sort @sand
_coal:
	set unittype @poly
	jump _typedefine strictEqual sort @coal
_titanium:
	set unittype @mega
	jump _typedefine strictEqual sort @titanium
_thorium:
	set unittype @zenith
	jump _typedefine strictEqual sort @thorium
_scrap:
	set unittype @atrax
	jump _typedefine strictEqual sort @scrap
_null_or_other:
	set unittype null
	
_typedefine:
	
_setting:
	op add nexttime @time 5000
	op add timeout @time 500
	op mul myflag @thisx 1000
	op add myflag @thisy myflag
	op add f1 myflag 10000000
	op add f2 myflag 20000000
	
_startcheckunit:
	
_u1start:
	jump _u1changeunit notEqual unittype preunit
    jump _u1check equal stop1 false
    jump _u1end equal u1 false
_u1changeunit:
    ubind u1
    ucontrol flag 0 0 0 0 0
    set u1 0
	jump _u1end always 0 0
_u1check:
    sensor dead u1 @dead
    jump _u1bind notEqual dead false
    sensor flag u1 @flag
    jump _u1end equal flag f1
    set u1 0
_u1bind:
    jump _u1end greaterThan @time timeout
    ubind unittype
    sensor flag @unit @flag
    jump _u1bind notEqual flag false
    ucontrol flag f1 0 0 0 0
	ucontrol boost 1 0 0 0 0
    set u1 @unit
_u1end:

_u2start:
	jump _u2changeunit notEqual unittype preunit
    jump _u2check equal stop2 false
    jump _u2end equal u2 false
_u2changeunit:
    ubind u2
    ucontrol flag 0 0 0 0 0
    set u2 0
	jump _u2end always 0 0
_u2check:
    sensor dead u2 @dead
    jump _u2bind notEqual dead false
    sensor flag u2 @flag
    jump _u2end equal flag f2
    set u2 0
_u2bind:
    jump _u2end greaterThan @time timeout
    ubind unittype
    sensor flag @unit @flag
    jump _u2bind notEqual flag false
    ucontrol flag f2 0 0 0 0
	ucontrol boost 1 0 0 0 0
    set u2 @unit
_u2end:


_recordpreunit:
	jump _recordpreunitend strictEqual unittype preunit
	set preunit unittype
_recordpreunitend:

_work:
	print "\nunit bind end"


	sensor ct container1 @titanium
	sensor cs container1 @sand
	sensor cc container1 @coal
	sensor cl container1 @lead
	


	jump _u1jend notEqual stop1 false
    ubind u1
    op add counter @counter 10
	
	sensor u1item @unit @titanium
	set TakeFromCoreTarget @titanium
	jump _job1 greaterThan u1item 0
	
	sensor u1item @unit @sand
	set TakeFromCoreTarget @sand
	jump _job1 greaterThan u1item 0
	
	set TakeFromCoreTarget @titanium
	jump _u1targetcheck greaterThan cs ct
	set TakeFromCoreTarget @sand
_u1targetcheck:
	jump _job1 notEqual @unit false
_u1jend:


	jump _u2jend notEqual stop1 false
    ubind u2
    op add counter @counter 10
	
	sensor u1item @unit @coal
	set TakeFromCoreTarget @coal
	jump _job1 greaterThan u1item 0
	
	sensor u1item @unit @lead
	set TakeFromCoreTarget @lead
	jump _job1 greaterThan u1item 0
	
	set TakeFromCoreTarget @coal
	jump _u2targetcheck greaterThan cl cc
	set TakeFromCoreTarget @lead
_u2targetcheck:
	jump _job1 notEqual @unit false
_u2jend:



_workend:
	end
	
_job1:
	ulocate building core false @copper corex corey found core
	sensor uitem @unit TakeFromCoreTarget
	jump _job1put greaterThan uitem 0
	ucontrol approach corex corey 4 0 0
	sensor titem @unit @totalItems
	jump _job1take equal titem 0
	ucontrol within corex corey 6 ccore 0
	jump _job1end equal ccore false
	ucontrol itemDrop core 999 6 0 0
	ucontrol itemDrop @air 999 6 0 0
_job1take:
	ucontrol itemTake core TakeFromCoreTarget 999 0 0
	jump _job1end always x false
_job1put:
	ucontrol approach @thisx @thisy 2 0 0
	ucontrol itemDrop container1 999 0 0 0
_job1end:
	set ccore 0
    set @counter counter
	end

_end:
	end