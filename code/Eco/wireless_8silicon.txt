_start:
	jump _work greaterThan nexttime @time
	print "\you need link a sorter to use it"
	print "\template by JohnTing"
	print "\code by acopika"
	sensor sort sorter1 @config

_copper:
	set unittype @flare
	jump _typedefine strictEqual sort @copper
_lead:
	set unittype @mono
	jump _typedefine strictEqual sort @lead
_metaglass:
	set unittype @horizon
	jump _typedefine strictEqual sort @metaglass
_graphite:
	set unittype @nova
	jump _typedefine strictEqual sort @graphite
_sand:
	set unittype @pulsar
	jump _typedefine strictEqual sort @sand
_coal:
	set unittype @poly
	jump _typedefine strictEqual sort @coal
_titanium:
	set unittype @mega
	jump _typedefine strictEqual sort @titanium
_thorium:
	set unittype @zenith
	jump _typedefine strictEqual sort @thorium
_scrap:
	set unittype @atrax
	jump _typedefine strictEqual sort @scrap
_null_or_other:
	set unittype null
	
_typedefine:
	
_setting:
	op add nexttime @time 5000
	op add timeout @time 500
	op mul myflag @thisx 1000
	op add myflag @thisy myflag
	op add f1 myflag 10000000
	op add f2 myflag 20000000
	op add f3 myflag 30000000
	op add f4 myflag 40000000
	op add f5 myflag 50000000
	op add f6 myflag 60000000
	op add f7 myflag 70000000
	op add f8 myflag 80000000
	
_startcheckunit:
	
_u1start:
	jump _u1changeunit notEqual unittype preunit
    jump _u1check equal stop1 false
    jump _u1end equal u1 false
_u1changeunit:
    ubind u1
    ucontrol flag 0 0 0 0 0
    set u1 0
	jump _u1end always 0 0
_u1check:
    sensor dead u1 @dead
    jump _u1bind notEqual dead false
    sensor flag u1 @flag
    jump _u1end equal flag f1
    set u1 0
_u1bind:
    jump _u1end greaterThan @time timeout
    ubind unittype
    sensor flag @unit @flag
    jump _u1bind notEqual flag false
    ucontrol flag f1 0 0 0 0
	ucontrol boost 1 0 0 0 0
    set u1 @unit
_u1end:

_u2start:
	jump _u2changeunit notEqual unittype preunit
    jump _u2check equal stop2 false
    jump _u2end equal u2 false
_u2changeunit:
    ubind u2
    ucontrol flag 0 0 0 0 0
    set u2 0
	jump _u2end always 0 0
_u2check:
    sensor dead u2 @dead
    jump _u2bind notEqual dead false
    sensor flag u2 @flag
    jump _u2end equal flag f2
    set u2 0
_u2bind:
    jump _u2end greaterThan @time timeout
    ubind unittype
    sensor flag @unit @flag
    jump _u2bind notEqual flag false
    ucontrol flag f2 0 0 0 0
	ucontrol boost 1 0 0 0 0
    set u2 @unit
_u2end:

_u3start:
	jump _u3changeunit notEqual unittype preunit
    jump _u3check equal stop3 false
    jump _u3end equal u3 false
_u3changeunit:
    ubind u3
    ucontrol flag 0 0 0 0 0
    set u3 0
	jump _u3end always 0 0
_u3check:
    sensor dead u3 @dead
    jump _u3bind notEqual dead false
    sensor flag u3 @flag
    jump _u3end equal flag f3
    set u3 0
_u3bind:
    jump _u3end greaterThan @time timeout
    ubind unittype
    sensor flag @unit @flag
    jump _u3bind notEqual flag false
    ucontrol flag f3 0 0 0 0
	ucontrol boost 1 0 0 0 0
    set u3 @unit
_u3end:

_u4start:
	jump _u4changeunit notEqual unittype preunit
    jump _u4check equal stop4 false
    jump _u4end equal u4 false
_u4changeunit:
    ubind u4
    ucontrol flag 0 0 0 0 0
    set u4 0
	jump _u4end always 0 0
_u4check:
    sensor dead u4 @dead
    jump _u4bind notEqual dead false
    sensor flag u4 @flag
    jump _u4end equal flag f4
    set u4 0
_u4bind:
    jump _u4end greaterThan @time timeout
    ubind unittype
    sensor flag @unit @flag
    jump _u4bind notEqual flag false
    ucontrol flag f4 0 0 0 0
	ucontrol boost 1 0 0 0 0
    set u4 @unit
_u4end:

_u5start:
	jump _u5changeunit notEqual unittype preunit
    jump _u5check equal stop5 false
    jump _u5end equal u5 false
_u5changeunit:
    ubind u5
    ucontrol flag 0 0 0 0 0
    set u5 0
	jump _u5end always 0 0
_u5check:
    sensor dead u5 @dead
    jump _u5bind notEqual dead false
    sensor flag u5 @flag
    jump _u5end equal flag f5
    set u5 0
_u5bind:
    jump _u5end greaterThan @time timeout
    ubind unittype
    sensor flag @unit @flag
    jump _u5bind notEqual flag false
    ucontrol flag f5 0 0 0 0
	ucontrol boost 1 0 0 0 0
    set u5 @unit
_u5end:

_u6start:
	jump _u6changeunit notEqual unittype preunit
    jump _u6check equal stop6 false
    jump _u6end equal u6 false
_u6changeunit:
    ubind u6
    ucontrol flag 0 0 0 0 0
    set u6 0
	jump _u6end always 0 0
_u6check:
    sensor dead u6 @dead
    jump _u6bind notEqual dead false
    sensor flag u6 @flag
    jump _u6end equal flag f6
    set u6 0
_u6bind:
    jump _u6end greaterThan @time timeout
    ubind unittype
    sensor flag @unit @flag
    jump _u6bind notEqual flag false
    ucontrol flag f6 0 0 0 0
	ucontrol boost 1 0 0 0 0
    set u6 @unit
_u6end:

_u7start:
	jump _u7changeunit notEqual unittype preunit
    jump _u7check equal stop7 false
    jump _u7end equal u7 false
_u7changeunit:
    ubind u7
    ucontrol flag 0 0 0 0 0
    set u7 0
	jump _u7end always 0 0
_u7check:
    sensor dead u7 @dead
    jump _u7bind notEqual dead false
    sensor flag u7 @flag
    jump _u7end equal flag f7
    set u7 0
_u7bind:
    jump _u7end greaterThan @time timeout
    ubind unittype
    sensor flag @unit @flag
    jump _u7bind notEqual flag false
    ucontrol flag f7 0 0 0 0
	ucontrol boost 1 0 0 0 0
    set u7 @unit
_u7end:

_u8start:
	jump _u8changeunit notEqual unittype preunit
    jump _u8check equal stop8 false
    jump _u8end equal u8 false
_u8changeunit:
    ubind u8
    ucontrol flag 0 0 0 0 0
    set u8 0
	jump _u8end always 0 0
_u8check:
    sensor dead u8 @dead
    jump _u8bind notEqual dead false
    sensor flag u8 @flag
    jump _u8end equal flag f8
    set u8 0
_u8bind:
    jump _u8end greaterThan @time timeout
    ubind unittype
    sensor flag @unit @flag
    jump _u8bind notEqual flag false
    ucontrol flag f8 0 0 0 0
	ucontrol boost 1 0 0 0 0
    set u8 @unit
_u8end:

_recordpreunit:
	jump _recordpreunitend strictEqual unittype preunit
	set preunit unittype
_recordpreunitend:

_work:
	print "\nunit bind end"

	jump _u1jend notEqual stop1 false
    ubind u1
	set target @sand
    op add counter @counter 1
    jump _job1 notEqual @unit false
_u1jend:
	jump _u2jend notEqual stop2 false
    ubind u2
    op add counter @counter 1
    jump _job1 notEqual @unit false
_u2jend:
	jump _u3jend notEqual stop3 false
    ubind u3
    op add counter @counter 1
    jump _job1 notEqual @unit false
_u3jend:
	jump _u4jend notEqual stop4 false
    ubind u4
    op add counter @counter 1
    jump _job1 notEqual @unit false
_u4jend:
	jump _u5jend notEqual stop5 false
    ubind u5
	set target @coal
    op add counter @counter 1
    jump _job1 notEqual @unit false
_u5jend:
	jump _u6jend notEqual stop6 false
    ubind u6
    op add counter @counter 1
    jump _job1 notEqual @unit false
_u6jend:
	jump _u7jend notEqual stop7 false
    ubind u7
    op add counter @counter 1
    jump _job2 notEqual @unit false
_u7jend:
	jump _u8jend notEqual stop8 false
    ubind u8
    op add counter @counter 1
    jump _job2 notEqual @unit false
_u8jend:

unloader:
	jump unloader_sand lessThan unload 2
	set config @coal
	set unload 0
	jump unloader_configset_end always x false
unloader_sand:
	set config @sand
	op add unload unload 1
unloader_configset_end:
	control configure unloader1 config 0 0 0
	control configure unloader2 config 0 0 0
	control configure unloader3 config 0 0 0
	control configure unloader4 config 0 0 0
	
_workend:
	end

_job1:
	ulocate building core false @copper corex corey found core
	sensor uitem @unit target
	jump _job1put greaterThan uitem 0
	ucontrol approach corex corey 4 0 0
	sensor result @unit @totalItems
	jump _job1take equal result 0
	ucontrol within corex corey 6 ccore 0
	jump _job1take equal ccore false
	ucontrol itemDrop core 999 6 0 0
	ucontrol itemDrop @air 999 6 0 0
_job1take:
	ucontrol itemTake core target 999 0 0
	jump _job1end always x false
_job1put:
	ucontrol approach @thisx @thisy 2 0 0
	ucontrol itemDrop container1 999 0 0 0
_job1end:
    set @counter counter
	end
	
_job2:
	ulocate building core false @copper corex corey found core
	sensor uitem @unit @totalItems
	jump _job2take strictEqual uitem 0
	sensor uitem @unit @silicon
	jump _u2drop greaterThan uitem 0
	ucontrol itemDrop @air 999 0 0 0
_u2drop:
	ucontrol approach corex corey 6 0 0
	ucontrol itemDrop core 999 0 0 0
	jump _job2end always x false
_job2take:
	ucontrol approach @thisx @thisy 2 0 0
	ucontrol itemTake container1 @silicon 999 0 0
_job2end:
    set @counter counter
	end
	
_end:
	end