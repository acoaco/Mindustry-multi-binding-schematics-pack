start:
	jump work greaterThan nexttime @time
	print "you need link a sorter to use it"
	print "\template by JohnTing"
	print "\code by acopika"
	sensor sort sorter1 @config
	jump copper strictEqual sort @copper
	jump lead strictEqual sort @lead
	jump metaglass strictEqual sort @metaglass
	jump null always x false
copper:
	set unittype @flare
	set ucap 20
	jump typedefine always x false
lead:
	set unittype @mono
	set ucap 20
	jump typedefine always x false
metaglass:
	set unittype @horizon
	set ucap 30
	jump typedefine always x false
null:
	set unittype null
typedefine:
	jump setting strictEqual unittype preunit
	set preunit unittype
	ubind u1
	ucontrol flag 0 0 0 0 0
	ubind u2
	ucontrol flag 0 0 0 0 0
	ubind u3
	ucontrol flag 0 0 0 0 0
	set u1 0
	set u2 0
	set u3 0
setting:
	op add nexttime @time 5000
	op add timeout @time 500
	op mul myflag @thisx 1000
	op add myflag @thisy myflag
	op add f1 myflag 10000000
	op add f2 myflag 20000000
	op add f3 myflag 30000000
	
check:
u1check:
	ubind u1
	sensor dead @unit @dead
	jump u1bind notEqual dead false
	sensor flag @unit @flag
	jump u1bindend equal flag f1
	set u1 0
u1bind:
	ubind unittype
	jump u1bindend greaterThan @time timeout
	sensor flag @unit @flag
	jump u1bind notEqual flag false
	ucontrol flag f1 0 0 0 0
	set u1 @unit
u1bindend:

u2check:
	ubind u2
	sensor dead @unit @dead
	jump u2bind notEqual dead false
	sensor flag @unit @flag
	jump u2bindend equal flag f2
	set u2 0
u2bind:
	ubind unittype
	jump u2bindend greaterThan @time timeout
	sensor flag @unit @flag
	jump u2bind notEqual flag false
	ucontrol flag f2 0 0 0 0
	set u2 @unit
u2bindend:

u3check:
	ubind u3
	sensor dead @unit @dead
	jump u3bind notEqual dead false
	sensor flag @unit @flag
	jump u3bindend equal flag f3
	set u3 0
u3bind:
	ubind unittype
	jump u3bindend greaterThan @time timeout
	sensor flag @unit @flag
	jump u3bind notEqual flag false
	ucontrol flag f3 0 0 0 0
	set u3 @unit
u3bindend:

work:
	print "\nunit bind end"
	
u1work:
	ubind u1
	op add x @thisx -5
	op add y @thisy -5
	ucontrol move x y 0 0 0
u1workend:

u2work:
	ubind u2
	op add x @thisx -3
	op add y @thisy -5
	ucontrol move x y 0 0 0
u2workend:

u3work:
	ubind u3
	op add x @thisx -1
	op add y @thisy -5
	ucontrol move x y 0 0 0
u3workend:

end:
	end